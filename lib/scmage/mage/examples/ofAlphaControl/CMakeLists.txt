SET(APP_NAME ofAlphaControl)

FILE(GLOB SRC ${SRC} src/*.cpp ${MAGE_EXTERNAL_LIBS_PATH}/gui/*.cpp)
FILE(GLOB HDR ${HDR} src/*.h ${MAGE_EXTERNAL_LIBS_PATH}/gui/*.h)

INCLUDE_DIRECTORIES(/usr/include/gtk-2.0)
INCLUDE_DIRECTORIES(/usr/lib/gtk-2.0/include)
INCLUDE_DIRECTORIES(/usr/include/atk-1.0)
INCLUDE_DIRECTORIES(/usr/include/cairo)
INCLUDE_DIRECTORIES(/usr/include/pango-1.0)
INCLUDE_DIRECTORIES(/usr/include/gio-unix-2.0)
INCLUDE_DIRECTORIES(/usr/include/glib-2.0)
INCLUDE_DIRECTORIES(/usr/lib/glib-2.0/include)
INCLUDE_DIRECTORIES(/usr/include/pixman-1)
INCLUDE_DIRECTORIES(/usr/include/freetype2)
INCLUDE_DIRECTORIES(/usr/include/directfb)
INCLUDE_DIRECTORIES(/usr/include/libpng12)
INCLUDE_DIRECTORIES(/usr/include/gstreamer-0.10)
INCLUDE_DIRECTORIES(/usr/include/libxml2)

INCLUDE_DIRECTORIES(${MAGE_SRC_PATH})
INCLUDE_DIRECTORIES(${MAGE_HTS_ENGINE_PATH})
INCLUDE_DIRECTORIES(${MAGE_PORTAUDIO_PATH})
INCLUDE_DIRECTORIES(${MAGE_SPTK_PATH})

INCLUDE_DIRECTORIES(${MAGE_EXTERNAL_LIBS_PATH}/gui)

#certainly not the cleanest way to do it, but it matches openframeworks' gcc command from the Makefile
#besides ... it works
#[OPENFRAMEWORKS]
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/glu/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/FreeImage/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/assimp/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/assimp/include/Compiler)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/cairo/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/cairo/include/cairo)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/cairo/include/pixman-1)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/cairo/include/libpng15)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/fmodex/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include/freetype2)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include/freetype2/freetype)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include/freetype2/freetype/config)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include/freetype2/freetype/internal)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/include/freetype2/freetype/internal/services)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/glew/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/glew/include/GL)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/kiss/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/portaudio/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/rtAudio/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/tess2/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/poco/include)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/math)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/gl)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/video)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/3d)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/types)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/graphics)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/app)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/events)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/sound)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/utils)
INCLUDE_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworks/communication)

LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/openFrameworksCompiled/lib/linux64/)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/poco/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/fmodex/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/freetype/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/glew/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/kiss/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/portaudio/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/rtAudio/lib/linux64)
LINK_DIRECTORIES(${OF_ROOT_PATH}/libs/tess2/lib/linux64)
#[/OPENFRAMEWORKS]

#[OFXOSC]
LINK_DIRECTORIES(${OFXOSC_ROOT_PATH})
#[/OFXOSC]

ADD_EXECUTABLE(${APP_NAME} ${SRC} ${HDR})
TARGET_LINK_LIBRARIES(${APP_NAME} pthread m)
TARGET_LINK_LIBRARIES(${APP_NAME} ofxosc)
TARGET_LINK_LIBRARIES(${APP_NAME} ${MAGE_LIB_NAME})

#[OPENFRAMEWORKS]
TARGET_LINK_LIBRARIES(${APP_NAME} openFrameworks)
TARGET_LINK_LIBRARIES(${APP_NAME} PocoNet)
TARGET_LINK_LIBRARIES(${APP_NAME} PocoXML)
TARGET_LINK_LIBRARIES(${APP_NAME} PocoUtil)
TARGET_LINK_LIBRARIES(${APP_NAME} PocoFoundation)
TARGET_LINK_LIBRARIES(${APP_NAME} freetype)
TARGET_LINK_LIBRARIES(${APP_NAME} kiss)
TARGET_LINK_LIBRARIES(${APP_NAME} tess2)
TARGET_LINK_LIBRARIES(${APP_NAME} RtAudio)
TARGET_LINK_LIBRARIES(${APP_NAME} fmodex)
TARGET_LINK_LIBRARIES(${APP_NAME} GLEW)
TARGET_LINK_LIBRARIES(${APP_NAME} GLU)
TARGET_LINK_LIBRARIES(${APP_NAME} gtk-x11-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} gdk-x11-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} atk-1.0)
TARGET_LINK_LIBRARIES(${APP_NAME} gio-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} pangoft2-1.0)
TARGET_LINK_LIBRARIES(${APP_NAME} gdk_pixbuf-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} pangocairo-1.0)
TARGET_LINK_LIBRARIES(${APP_NAME} cairo)
TARGET_LINK_LIBRARIES(${APP_NAME} pango-1.0)
TARGET_LINK_LIBRARIES(${APP_NAME} fontconfig)
TARGET_LINK_LIBRARIES(${APP_NAME} gobject-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} gmodule-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} gthread-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} rt)
TARGET_LINK_LIBRARIES(${APP_NAME} glib-2.0)
TARGET_LINK_LIBRARIES(${APP_NAME} mpg123)
TARGET_LINK_LIBRARIES(${APP_NAME} glut)
TARGET_LINK_LIBRARIES(${APP_NAME} GL)
TARGET_LINK_LIBRARIES(${APP_NAME} asound)
TARGET_LINK_LIBRARIES(${APP_NAME} openal)
TARGET_LINK_LIBRARIES(${APP_NAME} sndfile)
TARGET_LINK_LIBRARIES(${APP_NAME} vorbis)
TARGET_LINK_LIBRARIES(${APP_NAME} FLAC)
TARGET_LINK_LIBRARIES(${APP_NAME} ogg)
TARGET_LINK_LIBRARIES(${APP_NAME} freeimage)
#[/OPENFRAMEWORKS]

TARGET_LINK_LIBRARIES(${APP_NAME} portaudio)
TARGET_LINK_LIBRARIES(${APP_NAME} jack)

#g++   -Os -MFobj/x86_64Release/src/main.d -MTobj/x86_64Release/src/main.o -oobj/x86_64Release/src/main.o -c src/main.cpp
